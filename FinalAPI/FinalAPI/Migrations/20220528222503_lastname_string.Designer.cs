// <auto-generated />
using System;
using FinalAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalAPI.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20220528222503_lastname_string")]
    partial class lastname_string
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FinalAPI.Entities.Apartament", b =>
                {
                    b.Property<long?>("ID_Apartament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID_Apartament"), 1L, 1);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Chirie")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProprietarID_User")
                        .HasColumnType("bigint");

                    b.HasKey("ID_Apartament");

                    b.HasIndex("ProprietarID_User");

                    b.ToTable("Apartamentes");
                });

            modelBuilder.Entity("FinalAPI.Entities.Apartament_User", b =>
                {
                    b.Property<long?>("ID_Apartament_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID_Apartament_User"), 1L, 1);

                    b.Property<DateTime>("EndTIme")
                        .HasColumnType("datetime2");

                    b.Property<long>("ID_Apartament")
                        .HasColumnType("bigint");

                    b.Property<long>("ID_User")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Apartament_User");

                    b.HasIndex("ID_Apartament")
                        .IsUnique();

                    b.HasIndex("ID_User")
                        .IsUnique();

                    b.ToTable("Apartaments_Users");
                });

            modelBuilder.Entity("FinalAPI.Entities.User", b =>
                {
                    b.Property<long?>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("ID_User"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalAPI.Entities.Apartament", b =>
                {
                    b.HasOne("FinalAPI.Entities.User", "Proprietar")
                        .WithMany()
                        .HasForeignKey("ProprietarID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietar");
                });

            modelBuilder.Entity("FinalAPI.Entities.Apartament_User", b =>
                {
                    b.HasOne("FinalAPI.Entities.Apartament", "Apartament")
                        .WithOne()
                        .HasForeignKey("FinalAPI.Entities.Apartament_User", "ID_Apartament")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FinalAPI.Entities.User", "Locatar")
                        .WithOne()
                        .HasForeignKey("FinalAPI.Entities.Apartament_User", "ID_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Apartament");

                    b.Navigation("Locatar");
                });
#pragma warning restore 612, 618
        }
    }
}
